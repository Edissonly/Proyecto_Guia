
package sw;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ConversionSW", targetNamespace = "http://sw/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConversionSW {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://sw/", className = "sw.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://sw/", className = "sw.HelloResponse")
    @Action(input = "http://sw/ConversionSW/helloRequest", output = "http://sw/ConversionSW/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param cedula
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "consulta", targetNamespace = "http://sw/", className = "sw.Consulta")
    @ResponseWrapper(localName = "consultaResponse", targetNamespace = "http://sw/", className = "sw.ConsultaResponse")
    @Action(input = "http://sw/ConversionSW/consultaRequest", output = "http://sw/ConversionSW/consultaResponse")
    public String consulta(
        @WebParam(name = "cedula", targetNamespace = "")
        String cedula);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns sw.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validarDatos", targetNamespace = "http://sw/", className = "sw.ValidarDatos")
    @ResponseWrapper(localName = "validarDatosResponse", targetNamespace = "http://sw/", className = "sw.ValidarDatosResponse")
    @Action(input = "http://sw/ConversionSW/validarDatosRequest", output = "http://sw/ConversionSW/validarDatosResponse")
    public Usuario validarDatos(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param euros
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "euroAdolar", targetNamespace = "http://sw/", className = "sw.EuroAdolar")
    @ResponseWrapper(localName = "euroAdolarResponse", targetNamespace = "http://sw/", className = "sw.EuroAdolarResponse")
    @Action(input = "http://sw/ConversionSW/euroAdolarRequest", output = "http://sw/ConversionSW/euroAdolarResponse")
    public Double euroAdolar(
        @WebParam(name = "euros", targetNamespace = "")
        double euros);

    /**
     * 
     * @param palabra
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "diccionario", targetNamespace = "http://sw/", className = "sw.Diccionario")
    @ResponseWrapper(localName = "diccionarioResponse", targetNamespace = "http://sw/", className = "sw.DiccionarioResponse")
    @Action(input = "http://sw/ConversionSW/diccionarioRequest", output = "http://sw/ConversionSW/diccionarioResponse")
    public String diccionario(
        @WebParam(name = "palabra", targetNamespace = "")
        String palabra);

}
